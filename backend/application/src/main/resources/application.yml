spring:
  application:
    name: pagodirecto-crm-erp

  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:25432/pagodirecto_crm_dev}
    username: ${DATABASE_USERNAME:pagodirecto_dev}
    password: ${DATABASE_PASSWORD:dev_password_123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: UTC
        default_schema: public

  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    schemas: public

  # Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:c2VjcmV0LWtleS1mb3ItZGV2ZWxvcG1lbnQtb25seS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==}
      expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
    default-property-inclusion: non_null

# Server Configuration
server:
  port: ${SERVER_PORT:28008}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
  show-actuator: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.pagodirecto: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Custom Configuration
app:
  name: PagoDirecto CRM/ERP
  version: 1.0.0
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:23000}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: 3600
  security:
    public-endpoints:
      - /api/docs/**
      - /api/`swagger-ui`/**
      - /api/actuator/health
      - /api/v1/auth/login
      - /api/v1/auth/refresh
      - /api/v1/auth/register
